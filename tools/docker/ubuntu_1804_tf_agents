# Multipurpose docker for building and running TF-Agents. This docker is
# designed for flexibility.
#
# Example usage:
#
#  Builds a docker with the most recent nightly version of TF-Agents.
#    docker build -t tf_agents/release_test \
#      -f ubuntu_1804_tf_agents .
#
#  Builds a docker without TF-Agents. Used to build TF-Agents.
#    docker build -t tf_agents/release_build \
#      --build-arg tensorflow_pip_spec=noop \
#      --build-arg tf_agents_pip_spec=noop \
#      -f tools/docker/ubuntu_1804_tf_agents .
#
#  Builds a docker with a local TF-Agents .whl file.
#    docker build -t tf_agents/release_test \
#      --build-arg local_tf_agents_pip_spec=tf_agents-0.4.0-py3-none-any.whl \
#      --build-arg tf_agents_pip_spec=tf_agents-0.4.0-py3-none-any.whl  \
#      -f ubuntu_1804_tf_agents .
#
FROM tensorflow/tensorflow:nightly-gpu as base

LABEL maintainer="Toby Boyd <tobyboyd@google.com>"
ARG tf_agents_pip_spec="tf-agents-nightly[reverb]"
ARG tensorflow_pip_spec="tf-nightly"
ARG local_tf_agents_pip_spec=""
COPY ${local_tf_agents_pip_spec} ${local_tf_agents_pip_spec}

# Removes TensorFlow so specific version can be installed.
RUN pip uninstall -y tensorflow tensorflow-gpu tf-nightly tf-nightly-gpu

RUN pip install ${tensorflow_pip_spec}
RUN pip install ${tf_agents_pip_spec}

# Needs to run before installing tzdata and other apps below.
RUN apt-get update

# See https://bugs.python.org/issue19846
ENV LANG C.UTF-8

# Resolves tzdata asking for the timezone. python-opencv depends on tzdata.
RUN ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
RUN dpkg-reconfigure --frontend noninteractive tzdata

# Pick up some TF dependencies
RUN apt-get install -y --no-install-recommends \
      cmake \
      zlib1g-dev \
      libpng-dev \
      lsb-core \
      vim \
      less \
      git \
      ca-certificates \
      wget \
      zip \
      xvfb \
      freeglut3-dev \
      ffmpeg \
      python-opencv


# Upgrade pip, need to use pip3 and then pip after this or an error
# is thrown for no main found.
RUN pip install --upgrade pip setuptools
RUN pip install wheel \
      opencv-python \
      gym \
      atari-py \
      pybullet \
      gin-config \
      virtualenv \
      matplot \
      absl-py \
      mock

# Avoids constant errors of "No module named 'keyring.util.escape'"."
# Not needed when installing jupyter does not throw the error/warning.
RUN pip install --upgrade keyrings.alt


######################################################
# Jupyter notebook ipykernel downgrade is needed due to
# https://github.com/ipython/ipykernel/issues/422
######################################################
RUN pip install jupyter
RUN pip install ipykernel==5.1.1

RUN pip freeze
